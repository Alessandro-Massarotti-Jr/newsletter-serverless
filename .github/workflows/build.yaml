name: Build & Push Docker images to ECR

on:
  push:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service:
          - create-subscriber
          - delete-subscriber
          - newsletter-scheduler
          - send-email

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCOUNT: ${{ secrets.AWS_ACCOUNT_ID }}

    steps:
      - uses: actions/checkout@v3

      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Ensure ECR repository ${{ matrix.service }} exists
        run: |
          aws ecr describe-repositories --repository-names ${{ matrix.service }} \
          || aws ecr create-repository \
               --repository-name ${{ matrix.service }} \
               --image-scanning-configuration scanOnPush=true \
               --region $AWS_REGION

      - name: Build, tag and push image
        env:
          IMAGE_TAG: ${{ github.sha }}
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          SERVICE: ${{ matrix.service }}
        run: |
          IMAGE_URI=$REGISTRY/$SERVICE:$IMAGE_TAG
          echo "▶︎ Building $IMAGE_URI ..."
          docker build -t $IMAGE_URI $SERVICE

          # (opcional) tag latest
          docker tag $IMAGE_URI $REGISTRY/$SERVICE:latest

          echo "▶︎ Pushing images ..."
          docker push $REGISTRY/$SERVICE:$IMAGE_TAG
          docker push $REGISTRY/$SERVICE:latest

      - name: Show pushed image URI
        run: |
          echo "✅ Pushed: ${{ steps.login-ecr.outputs.registry }}/${{ matrix.service }}:${{ github.sha }}"
